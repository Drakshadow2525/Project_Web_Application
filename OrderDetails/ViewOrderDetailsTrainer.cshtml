@model IEnumerable<FinalProjectPetey.Models.OrderDetailsViewModelTrainer>

@{
    ViewBag.Title = "ViewOrderDetailsTrainer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>ViewOrderDetailsTrainer</h2>

<div class="row">
    <div class="col">
        @Html.ActionLink("Create New", "#", new { @class = "btn btn-success " })
        </p>
    </div>
    <div class="col-3">
        @Html.ActionLink("Excel Export", "ExcelExportPet", "OrderDetails", new { @class = "btn btn-success " })
    </div>
</div>
<div class="row">
    <div class="col">
        <button class="btn btn-success" onclick="$('#target').toggle();">Show Chart</button>
        <center>
            <div id="target" style="display: none">
                <h3>Line Chart Order By Model</h3>
                <div id="line_chart"></div>
                <h3>Pie Chart Order By Model</h3>
                <div id="pie_chart"></div>
            </div>
        </center>
    </div>
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.NameTrainer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PriceTrainer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AmountTrainer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TotalTrainer)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.NameTrainer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PriceTrainer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AmountTrainer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalTrainer)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}

</table>

    <script type="text/javascript"
            src="https://www.google.com/jsapi?autoload={
'modules':[{
'name':'visualization',
'version':'1',
'packages':['corechart']
}]
}">
    </script>
    <script type="text/javascript">
         google.load('visualization', '1.1', { packages: ['line'] });
         google.setOnLoadCallback(drawLineChart);
         function drawLineChart() {
             $.get('/API/OrderbyModelTrainer', {},
 function (data) {
     var tdata = new google.visualization.DataTable();
     tdata.addColumn('string', 'Model');
     tdata.addColumn('number', 'Amount');
     for (var i = 0; i < data.length; i++) {
     tdata.addRow([data[i].Model, data[i].Amount]);
 }
     var options = {
     width: 900
 };
     var chart = new google.charts.Line(document.getElementById('line_chart'));
     chart.draw(tdata, options);
 });
 }
    </script>

    <script type="text/javascript">
             google.setOnLoadCallback(drawPieChart);
             function drawPieChart() {
                 $.get('/API/OrderbyModelTrainer', {},
             function (data) {
             var tdata = new google.visualization.DataTable();
                 tdata.addColumn('string', 'Model');
                 tdata.addColumn('number', 'Amount');
                 for (var i = 0; i < data.length; i++) {
                 tdata.addRow([data[i].Model, data[i].Amount]);
             }
             var options = {
                 width: 1200,
                 height: 350
             };
                 var chart = new google.visualization.PieChart(document.getElementById('pie_chart'));
                 chart.draw(tdata, options);
             });
             }
    </script>
